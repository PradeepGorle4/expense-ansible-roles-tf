- name: Install nginx
  ansible.builtin.package:
    name: nginx
    state: installed

- name: enable and start the nginx
  ansible.builtin.service:
    name: nginx
    state: started
    enabled: true

- name: include role from common
  include_role:
    name: common
    tasks_from: main

# - name: Removing default html directory
#   ansible.builtin.file:
#     path: /usr/share/nginx/html
#     state: absent

# - name: creating the html directory
#   ansible.builtin.file:
#     path: /usr/share/nginx/html
#     state: directory

# - name: downloading the frontend content
#   ansible.builtin.get_url:
#     url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-frontend-v2.zip
#     dest: /tmp/frontend.zip

# - name: Unzipping the frontend content
#   ansible.builtin.unarchive:
#     src: /tmp/frontend.zip
#     dest: /usr/share/nginx/html
#     remote_src: yes

- name: Copying the expense Config
  ansible.builtin.template:
    src: /home/ec2-user/expense-ansible-roles/roles/frontend/templates/expense.conf.j2
    dest: /etc/nginx/default.d/expense.conf
  notify:
  - Restart nginx # This is the name of handler

  # Here we only want to restart nginx only when changes are done to config file.
  # use handlers to notify the restart nginx task if only the change in config file happens
# Here, if the above task is yellow, like if the config content is copied newly or changed, it runs in yellow and there by notifying the
# handler named Restart nginx which will restart the

